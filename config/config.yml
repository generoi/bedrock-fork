---
vagrant_box: geerlingguy/ubuntu1404
vagrant_hostname: <example-project>.dev
vagrant_machine_name: <example-project>
# @note: this should be unique per project.
vagrant_ip: 192.168.87.87

# A list of synced folders, with the keys 'local_path', 'destination', and
# a 'type' of [nfs|rsync|smb] (leave empty for slow native shares). See
# http://docs.drupalvm.com/en/latest/extras/syncing-folders/ for more info.
vagrant_synced_folders:
  - local_path: .
    destination: /var/www/wordpress
    id: wordpress
    type: rsync
    create: true
    excluded_paths: ['.git/', './vm/', './lib/', '.tmp/', 'node_modules/', 'app/uploads/', 'app/cache/']
    options_override:
      rsync__chown: false
      rsync__verbose: true
      rsync__args: [
        "--verbose", "--archive", "--delete",
        "--owner", "--group", "--usermap=*:vagrant", "--groupmap=*:www-data",
      ]

# Needs to match with what we have in .env and vagrant_synced_folders.
drupal_core_path: "/var/www/wordpress/web"
drupal_domain: "{{ vagrant_hostname }}"
drupal_mysql_user: wordpress
drupal_mysql_password: wordpress
drupal_mysql_database: wordpress

# Disable Drupal specific features.
build_composer_project: false
install_site: false
configure_drush_aliases: false
drush_keep_updated: false

# Enable SSL Support on the Drupal site vhosts.
# See https://github.com/geerlingguy/ansible-role-apache for additional options.
# Update the file paths below if you are using a custom SSL certificate.
apache_vhosts_ssl:
  - servername: "{{ drupal_domain }}"
    serveralias: "www.{{ drupal_domain }}"
    documentroot: "{{ drupal_core_path }}"
    certificate_file: "/etc/ssl/certs/ssl-cert-snakeoil.pem"
    certificate_key_file: "/etc/ssl/private/ssl-cert-snakeoil.key"
    extra_parameters: |
          ProxyPassMatch ^/(.*\.php(/.*)?)$ "fcgi://127.0.0.1:9000{{ drupal_core_path }}"

# Comment out any extra utilities you don't want to install. If you don't want
# to install *any* extras, make set this value to an empty set, e.g. `[]`.
installed_extras:
  - adminer
  # - blackfire
  # - drupalconsole
  - mailhog
  - memcached
  # - newrelic
  # - nodejs
  - pimpmylog
  # - redis
  # - ruby
  # - selenium
  # - solr
  # - varnish
  - xdebug
  - xhprof

# Add any extra apt or yum packages you would like installed.
extra_packages:
  - libjpeg-turbo-progs
  - optipng
  - gifsicle

# PHP Configuration. Currently-supported versions: 5.6, 7.0.
# To use 5.6, see: http://docs.drupalvm.com/en/latest/other/php-56/
php_version: "5.6"
php_packages:
  - php5
  - php5-apcu
  - php5-mcrypt
  - php5-cli
  - php5-common
  - php5-curl
  - php5-dev
  - php5-fpm
  - php5-gd
  - php5-sqlite
  - php5-imagick
  - php-pear
  - libpcre3-dev
php_conf_paths:
  - /etc/php5/fpm
  - /etc/php5/apache2
  - /etc/php5/cli
php_extension_conf_paths:
  - /etc/php5/fpm/conf.d
  - /etc/php5/apache2/conf.d
  - /etc/php5/cli/conf.d
php_fpm_daemon: php5-fpm
php_fpm_conf_path: "/etc/php5/fpm"
php_fpm_pool_conf_path: "/etc/php5/fpm/pool.d/www.conf"
php_mysql_package: php5-mysql
php_memcached_package: php5-memcached
xhprof_download_url: https://github.com/phacility/xhprof/archive/master.tar.gz
xhprof_download_folder_name: xhprof-master

# Run specified scripts before or after VM is provisioned. Path is relative to
# the `provisioning/playbook.yml` file.
post_provision_scripts:
  - "{{ config_dir }}/../lib/genero-conf/post-provisioning/dotfiles.sh"
  - "{{ config_dir }}/../lib/genero-conf/post-provisioning/wordpress.sh"
